//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DotNetClient
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookDTO", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class BookDTO : object
    {
        
        private string AuthorField;
        
        private string TitleField;
        
        private int YearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author
        {
            get
            {
                return this.AuthorField;
            }
            set
            {
                this.AuthorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year
        {
            get
            {
                return this.YearField;
            }
            set
            {
                this.YearField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class Book : object
    {
        
        private string AuthorField;
        
        private int IdField;
        
        private string TitleField;
        
        private int YearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author
        {
            get
            {
                return this.AuthorField;
            }
            set
            {
                this.AuthorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year
        {
            get
            {
                return this.YearField;
            }
            set
            {
                this.YearField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DotNetClient.IBookSoap")]
    public interface IBookSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookSoap/CreateBook", ReplyAction="http://tempuri.org/IBookSoap/CreateBookResponse")]
        System.Threading.Tasks.Task<DotNetClient.Book> CreateBookAsync(DotNetClient.BookDTO newBook);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookSoap/UpdateBook", ReplyAction="http://tempuri.org/IBookSoap/UpdateBookResponse")]
        System.Threading.Tasks.Task<DotNetClient.Book> UpdateBookAsync(DotNetClient.Book updateBook);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookSoap/DeleteBook", ReplyAction="http://tempuri.org/IBookSoap/DeleteBookResponse")]
        System.Threading.Tasks.Task<DotNetClient.Book> DeleteBookAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookSoap/GetBook", ReplyAction="http://tempuri.org/IBookSoap/GetBookResponse")]
        System.Threading.Tasks.Task<DotNetClient.Book> GetBookAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookSoap/GetBooks", ReplyAction="http://tempuri.org/IBookSoap/GetBooksResponse")]
        System.Threading.Tasks.Task<DotNetClient.Book[]> GetBooksAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface IBookSoapChannel : DotNetClient.IBookSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class BookSoapClient : System.ServiceModel.ClientBase<DotNetClient.IBookSoap>, DotNetClient.IBookSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public BookSoapClient() : 
                base(BookSoapClient.GetDefaultBinding(), BookSoapClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IBookSoap.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BookSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(BookSoapClient.GetBindingForEndpoint(endpointConfiguration), BookSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BookSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(BookSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BookSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(BookSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BookSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<DotNetClient.Book> CreateBookAsync(DotNetClient.BookDTO newBook)
        {
            return base.Channel.CreateBookAsync(newBook);
        }
        
        public System.Threading.Tasks.Task<DotNetClient.Book> UpdateBookAsync(DotNetClient.Book updateBook)
        {
            return base.Channel.UpdateBookAsync(updateBook);
        }
        
        public System.Threading.Tasks.Task<DotNetClient.Book> DeleteBookAsync(int id)
        {
            return base.Channel.DeleteBookAsync(id);
        }
        
        public System.Threading.Tasks.Task<DotNetClient.Book> GetBookAsync(int id)
        {
            return base.Channel.GetBookAsync(id);
        }
        
        public System.Threading.Tasks.Task<DotNetClient.Book[]> GetBooksAsync()
        {
            return base.Channel.GetBooksAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IBookSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IBookSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:2317/BookSoap");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return BookSoapClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IBookSoap);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return BookSoapClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IBookSoap);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IBookSoap,
        }
    }
}
